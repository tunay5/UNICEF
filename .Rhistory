#' @param filter
#' @param start
#' @param end
#'
#' @return
#' @export
#'
#' @examples
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
url <- paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1")
print(url)
}
get_data("CAP 2030", filter = c("DZA...."))
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#'
#' @return
#' @export
#'
#' @examples
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main)
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#'
#' @return
#' @export
#'
#' @examples
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main)
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
get_data("CAP 2030", filter = c("DZA...."))
View(get_data("CAP 2030", filter = c("DZA....")))
asd <- get_data("CAP 2030", filter = c("DZA...."))
asd[1]
View(asd[1])
View(asd[[1]])
View(asd[[3]])
View(asd[[1]])
View(asd[[7]])
asd <- get_data("CAP 2030", filter = c("DZA.2..."))
asd
View(asd)
asd[[1]]
View(asd[[1]])
library(UN)
?get_data
get_data("DF_UNData_UNFCC", filter = list(c("REF_AREA","DEU"),c("INDICATOR", "EN_ATM_METH_XLULUCF")), start = 2010, end = 2015)
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#'
#' @return
#' @export
#'
#' @examples
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main)
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
#' dataflows
#'
#' @return
#' @export
#'
#' @examples
dataflows <- function(){
url <- "https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/dataflow/all/all/latest/?format=sdmx-2.1&detail=full&references=none"
page <- xml2::read_xml(url)
data_flow_id <- xml2::xml_attr(xml2::xml_find_all(page, "//str:Structure/Ref"),"id")
data_flow_agencyID <- xml2::xml_attr(xml2::xml_find_all(page, "//str:Dataflow"),"agencyID")
data_flow_name <- xml2::xml_text(xml2::xml_find_all(page, "//str:Dataflow/com:Name"))
dataflow <- xml2::xml_attr(xml2::xml_find_all(page, "//str:Dataflow"),"id")
data.frame(data_flow_name, dataflow, data_flow_id, data_flow_agencyID)
}
data <- dataflows()
View(data)
get_data("CAP 2030", filter = c("DZA...."), start = 2020, end = 2020)
get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)
devtools::load_all(".")
library(UNICEF)
UNICEF::dataflows()
dataflows()
library(devtools)
use_package("xml2")
devtools::load_all(".")
library(UNICEF)
dataflows()
data <- dataflows()
View(data)
libra
library(UNICEF)
get_data("CAP 2030")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
print(url)
}
get_data("CAP 2030")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("CAP 2030")
get_data("CAP 2030", filter = c("DZA.2..."))
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main)
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
get_data("CAP 2030", filter = c("DZA.2..."))
get_data("Brazil Country Office")
get_data("BRAZIL_CO")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("BRAZIL_CO")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- as.character(data[data[,1]==dataflow,4])
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("BRAZIL_CO")
data
data <- dataflows()
data[data[,1]=="Brazil Country Office",4]
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,1]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("CAP 2030")
get_data("BRAZIL_CO")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("BRAZIL_CO")
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main)
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
get_data("BRAZIL_CO")
get_data("CAP 2030", filter = c("DZA.2..."))
get_data("BRAZIL_CO", filter = c("ES.PIM_TRAB_E_NUM.."))
get_data("BRAZIL_CO", filter = c("ES..."), start = 2010, end = 2015)
get_data("BRAZIL_CO", filter = c("ES..."), start = 2010, end = 2012)
asd <- get_data("BRAZIL_CO", filter = c("ES..."), start = 2010, end = 2012)
asd[[1]]
asd[[2]]
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main[i])
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
asd <- get_data("BRAZIL_CO", filter = c("ES..."), start = 2010, end = 2012)
get_data("BRAZIL_CO", filter = c("ES..."), start = 2010, end = 2012)
get_data("BRAZIL_CO", filter = c("ES.PORCENTAGEMHOMICIDIOS10A19.."), start = 2010, end = 2012)
get_data("BRAZIL_CO", filter = c("SP.MORTALIDADEINFANCIAMENOR5.."), start = 2010, end = 2012)
get_data("BRAZIL_CO", filter = c("SP.MORTALIDADEINFANCIAMENOR5.."), start = 2010, end = 2012)
get_data("CME Ethiopia")
get_data("CME_SUBNAT_ETH")
get_data("CME_SUBNAT_ETH", filter = c("BDI012002....."))
get_data("CME_SUBNAT_BEN", filter = c("BDI012002....."))
get_data("CME_SUBNAT_BEN")
get_data("CME_SUBNAT_BEN", filter = c("BDI012002....."))
get_data("CME_SUBNAT_BEN", filter = c("BDI012002......"))
get_data("CME_SUBNAT_BEN", filter = c("BDI012002...."))
get_data("CME_SUBNAT_BEN", filter = c("BDI012002....."))
get_data("BRAZIL_CO", filter = c("SP.MORTALIDADEINFANCIAMENOR5.."), start = 2010, end = 2012)
get_data("CME_SUBNAT_BEN", filter = c("BDI012002....."))
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("CME_SUBNAT_BEN", filter = c("BDI012002....."))
rm(asd,get_data)
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
BDI012002.....
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
print(url)
}
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
#'
#' @param dataflow
#' @param filter
#' @param start
#' @param end
#' @details When writing \code {filter}, write in a vector form and add dot between each filter objects: \code{c("DZA.2..M18T23.")}
#' @return
#' @export
#' @description Returns the dataset for the selected dataflow and filtered information
#' @examples \code{get_data("CAP 2030", filter = c("DZA.2..."), start = 2020, end = 2020)}
get_data <- function(dataflow, filter = "all", start = NULL, end = NULL){
data <- dataflows()
agencyID <- data[data[,2]==dataflow,4]
if(is.null(start) && is.null(end)){
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?format=sdmx-compact-2.1"))
}else{
url <- gsub(" ","",paste0("https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/",agencyID,",",dataflow,",1.0/",filter,"?startPeriod=",start,"&endPeriod=",end))
}
page <- xml2::read_xml(url)
main <- xml2::xml_children(xml2::xml_find_all(page, "//message:DataSet"))
list_1 <- list()
for(i in 1:length(main)){
d_child <- xml2::xml_children(main[i])
attr <- d_child |>
purrr::map(~names(xml2::xml_attrs(.))) |>
unlist() |>
unique()
data <- data.frame(matrix(ncol = length(attr), nrow = length(d_child)))
for(a in 1:length(attr)){
data[,a] <- xml2::xml_attr(d_child, attr[a])
}
names(data) <- attr
list_1[[i]] <- data
}
list_1
}
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
library(UNICEF)
get_data("CME_SUBNAT_BDI", filter = c("BDI012002....."))
remove.packages("UNICEF")
library(devtools)
install_github("tunay5/UNICEF")
